stages:
    - release
    - deploy

variables:
  GKE_CLUSTER_NAME: sample-review-app
  GKE_ZONE: europe-west1-b
  GKE_PROJECT: <my-project>
  DOMAIN_NAME: <my-domain>
  REVIEW_NAMESPACE: $CI_BUILD_REF_SLUG
  PROD_NAMESPACE: production
  DOCKER_IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
  DOCKER_IMAGE_FULL_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA

docker-push:
    stage: release
    image: docker:19.03.1
    services:
      - docker:dind
    script:
        - docker build -t sample-review-app .
        - docker login registry.gitlab.com --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD
        - docker tag sample-review-app ${DOCKER_IMAGE_FULL_NAME}
        - docker push ${DOCKER_IMAGE_FULL_NAME}
        - docker logout

deploy-to-review-start:
    stage: deploy
    image: devth/helm:v3.1.1
    script:
      - init_gke
      - kubectl create namespace $REVIEW_NAMESPACE
      - kubectl create secret docker-registry gitlab-auth --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --namespace=$REVIEW_NAMESPACE
      - helm upgrade --install jhipster ./helm/jhipster --namespace=$REVIEW_NAMESPACE --set image_tag=$DOCKER_IMAGE_TAG --set domain_name=$DOMAIN_NAME
    environment:
      name: $CI_BUILD_REF_SLUG
      url: http://$CI_BUILD_REF_SLUG.$DOMAIN_NAME
      on_stop: deploy-to-review-stop
    only:
      - branches
    except:
      - master

deploy-to-review-stop:
    stage: deploy
    image: devth/helm:v3.1.1
    script:
      - init_gke
      - helm uninstall jhipster --namespace=$REVIEW_NAMESPACE
      - kubectl delete secret gitlab-auth --namespace=$REVIEW_NAMESPACE
      - kubectl delete namespace $REVIEW_NAMESPACE
    variables:
      GIT_STRATEGY: none
    when: manual
    environment:
      name: $CI_BUILD_REF_SLUG
      action: stop

deploy-to-production:
    stage: deploy
    image: devth/helm:v3.1.1
    script:
      - init_gke
      - helm upgrade --install jhipster ./helm/jhipster --namespace=$PROD_NAMESPACE --set image_tag=$DOCKER_IMAGE_TAG --set domain_name=$DOMAIN_NAME
    environment:
        name: ${PROD_NAMESPACE}
        url: http://${PROD_NAMESPACE}.${DOMAIN_NAME}
    when: manual
    only:
      - master

.functions: &functions |
  # Functions
  function init_gke() {
      mkdir -p /etc/deploy
      echo ${GKE_SERVICE_ACCOUNT} | base64 -d > /etc/deploy/service-key.json
      gcloud auth activate-service-account --key-file /etc/deploy/service-key.json --project=${GKE_PROJECT}
      gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}
  }

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - *functions
