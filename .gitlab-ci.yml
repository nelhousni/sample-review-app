stages:
    - release
    - deploy

variables:
  GKE_CLUSTER_NAME: sample-cluster
  GKE_ZONE: europe-west1-b
  GKE_PROJECT: private-250107
  GKE_NAMESPACE: $CI_BUILD_REF_SLUG
  DOMAIN_NAME: sample.nortech.dev
  DOCKER_IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
  DOCKER_IMAGE_FULL_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA

docker-push:
    stage: release
    image: docker:19.03.1
    services:
      - docker:dind
    script:
        - docker build -t sample-review-app .
        - docker login registry.gitlab.com --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD
        - docker tag sample-review-app ${DOCKER_IMAGE_FULL_NAME}
        - docker push ${DOCKER_IMAGE_FULL_NAME}
        - docker logout

deploy-to-review-start:
    stage: deploy
    image: devth/helm:v3.1.1
    script:
      - init_gke
      - helm_install
    environment:
      name: ${CI_BUILD_REF_SLUG}
      url: http://$CI_BUILD_REF_SLUG.$DOMAIN_NAME
      on_stop: deploy-to-review-stop
    only:
      - branches
    except:
      - master

deploy-to-review-stop:
    stage: deploy
    image: devth/helm:v3.1.1
    script:
      - init_gke
      - helm_uninstall
    variables:
      GIT_STRATEGY: none
    when: manual
    environment:
      name: ${CI_BUILD_REF_SLUG}
      action: stop
    only:
      - branches
    except:
      - master

deploy-to-production:
    stage: deploy
    image: devth/helm:v3.1.1
    script:
      - init_gke
      - helm_install
    environment:
        name: ${CI_BUILD_REF_SLUG}
        url: http://${CI_BUILD_REF_SLUG}.${DOMAIN_NAME}
    when: manual
    only:
      - master

.functions: &functions |
  # Functions
  function init_gke() {
      mkdir -p /etc/deploy
      echo ${GKE_SERVICE_ACCOUNT} | base64 -d > /etc/deploy/service-key.json
      gcloud auth activate-service-account --key-file /etc/deploy/service-key.json --project=${GKE_PROJECT}
      gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}
  }

  function helm_install() {
    kubectl create namespace ${GKE_NAMESPACE} || true
    helm upgrade --install sample-review-app ./helm/sample-review-app \
      --namespace=${GKE_NAMESPACE} \
      --set domain_name=${DOMAIN_NAME}  \
      --set docker_image=${DOCKER_IMAGE_FULL_NAME} \
      --set docker_registry=${CI_REGISTRY} \
      --set docker_username=${CI_REGISTRY_USER} \
      --set docker_password=${CI_REGISTRY_PASSWORD}
  }

  function helm_uninstall() {
    helm uninstall sample-review-app --namespace=$GKE_NAMESPACE
    kubectl delete namespace ${GKE_NAMESPACE} || true
  }

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - *functions
